name: Build docs

on:
  workflow_dispatch:
  schedule:
    - cron: '43 0-14/2 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - [secretflow, main]
          - [spu, main]
          - [heu, main]
          - [interconnection, main]
          - [scql, main]
          - [kuscia, main]
          - [secretpad, main]
          - [spec, main]
          - [trustedflow, main]
          - [psi, main]

    steps:
      - uses: actions/checkout@v3

      - name: Create temporary directory
        run: |
          rm -rf ${{ github.workspace }}/build
          mkdir -p ${{ github.workspace }}/build
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          repository: secretflow/${{ matrix.project[0] }}
          fetch-depth: 0
          ref: ${{ matrix.project[1] }}
          path: ${{ github.workspace }}/build/${{ matrix.project[0] }}
      - name: Patch config
        run: |
          cp -rf ${{ github.workspace }}/patches/${{ matrix.project[0] }}/* ${{ github.workspace }}/build/${{ matrix.project[0] }}/

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.x'
          cache: 'pip'
          cache-dependency-path: |
            build/${{ matrix.project[0] }}/requirements.txt
            build/${{ matrix.project[0] }}/docs/requirements.txt

      - name: Install Python dependencies
        working-directory: build/${{ matrix.project[0] }}
        run: |
          python -m pip install --upgrade pip

      - name: "Get project's commit SHA"
        id: get-project-sha
        working-directory: build/${{ matrix.project[0] }}
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "sha-short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: 'Install pandoc'
        run: |
          curl -sSL https://github.com/jgm/pandoc/releases/download/2.19.2/pandoc-2.19.2-1-amd64.deb -o pandoc.deb
          sudo dpkg -i pandoc.deb
          rm pandoc.deb

      - name: 'Build docs'
        working-directory: build/${{ matrix.project[0] }}
        run: ./build_docs.sh

      - name: 'Copy artifacts'
        run: |
          rm -rf ${{ github.workspace }}/artifacts/${{ matrix.project[0] }}
          mkdir -p ${{ github.workspace }}/artifacts/${{ matrix.project[0] }}/latest
          cp -rf \
            ${{ github.workspace }}/build/${{ matrix.project[0] }}/docs/_build/mdx/* \
            ${{ github.workspace }}/artifacts/${{ matrix.project[0] }}/latest/

      # Generate GitHub token for changesets/action
      # Using https://github.com/secretflow/bot
      # This allows changesets/action to create a release PR using the bot's identity
      # Token goes into env. See action for details
      - name: Generate GitHub token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: 'Create pull request'
        id: create-pull-request
        uses: peter-evans/create-pull-request@v5
        with:
          add-paths: |
            artifacts/${{ matrix.project[0] }}/latest
          commit-message:
            'chore(${{ matrix.project[0] }}): Update docs to ${{
            steps.get-project-sha.outputs.sha }}'
          branch: 'docs/${{ matrix.project[0] }}'
          delete-branch: true
          title: 'chore(${{ matrix.project[0] }}): Update docs'
          reviewers: |
            tonywu6
          token: ${{ env.BOT_TOKEN }}
          body: |
            This PR updates documentation artifacts for ${{ matrix.project[0] }}.

            Built from `${{ steps.get-project-sha.outputs.sha-short }}` | [commit] | [docs]

            [commit]: https://github.com/secretflow/${{ matrix.project[0] }}/commit/${{ steps.get-project-sha.outputs.sha }}
            [docs]: https://github.com/secretflow/${{ matrix.project[0] }}/tree/${{ steps.get-project-sha.outputs.sha }}/docs

      - name: 'Enable auto-merge'
        if: ${{ steps.create-pull-request.outputs.pull-request-url != '' }}
        run:
          gh pr merge ${{ steps.create-pull-request.outputs.pull-request-url }}
          --auto --squash --delete-branch
        env:
          GH_TOKEN: ${{ github.token }}
